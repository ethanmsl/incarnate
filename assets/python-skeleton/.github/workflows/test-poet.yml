name: tests

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: check python version
        run: python --version
      #----------------------------------------------
      #          install & configure poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: check poetry version
        run: poetry --version

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: report cache used
        run: echo 'Cache LOADED'
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root
          echo 'poetry installed from scratch'
      #----------------------------------------------
      #    install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      - name: where are we
        run: pwd
      #----------------------------------------------
      #                run test suite
      #----------------------------------------------
      - name: activate .venv
        run: source .venv/bin/activate
      - name: isort
        run: poetry run isort src/ tests/ --check-only --dif
      - name: black
        run: poetry run black src/ tests/ --check
      - name: pylint
        run: poetry run pylint src/ tests/
      - name: pyright
        run: poetry run pyright src/ tests/
      - name: pytest_and_coverage
        run: poetry run pytest --cov-report term-missing --cov-fail-under=0 --cov=src tests/
      - name: poetry_check
        run: poetry check
